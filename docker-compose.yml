version: '3.8'
services:


  db:
    image: postgres:latest
    restart: on-failure
    environment:
      POSTGRES_DB: chat
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./src/main/resources/sql:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"

  cassandra:
    image: cassandra
    ports:
      - '9042:9042'

  redis:
    image: docker.io/redis:alpine
    ports:
      - 6379:6379

  app1:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - 9091:8080
    depends_on:
      - db
      - cassandra
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/chat
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - 9092:8080
    depends_on:
      - db
      - cassandra
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/chat
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

  haproxy:
    image: docker.io/haproxy:lts-alpine
    restart: on-failure
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    command: haproxy -f /usr/local/etc/haproxy/haproxy.cfg
    ports:
      - 8080:8080
    depends_on:
      - app1
      - app2
